name: "docs"

on: 
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'  # Run on all PRs

env:
  GIT_USER_NAME: BattINFO Developers
  GIT_USER_EMAIL: "BattINFO@big-map.org"
    
jobs:
  updatepages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y pandoc
        python -m pip install --upgrade pip
        pip install Markdown==3.4.3 rdflib==6.3.2

    - name: Find all TTL files (excluding inferred)
      run: |
        find . -type f -name "*.ttl" ! -name "*inferred.ttl" > ttl_files_list.txt
        cat ttl_files_list.txt

    - name: Find inferred TTL file
      run: |
        find . -type f -name "battery-inferred.ttl" > inferred_ttl_list.txt || true
        cat inferred_ttl_list.txt || echo "No inferred TTL file found."

    - name: Render documentation from TTL
      run: python docs/scripts/ttl_to_rst.py ttl_files_list.txt

    - name: Check for duplicate labels in battery.rst
      run: |
        if grep -n "label" docs/battery.rst; then
          echo "WARNING: Duplicate label definitions detected in battery.rst!"
          exit 1
        fi

    - name: Build HTML
      uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docs/"
        pre-build-command: "sudo apt-get update -y && sudo apt-get install -y pandoc"
        build-command: "make html"

    - name: Create context file from TTL
      run: python docs/scripts/ttl_to_context.py ttl_files_list.txt

    - name: Ensure HTML directories exist
      run: |
        sudo mkdir -p docs/_build/html/context/
        sudo mkdir -p docs/_build/html/assets/
        sudo mkdir -p docs/_build/html/versions/
        sudo chmod -R 777 docs/_build/html/

    - name: Copy assets directory to HTML directory
      run: sudo cp -r docs/assets/* docs/_build/html/assets/
    
    - name: Copy context file to HTML directory
      run: sudo cp context/context.json docs/_build/html/context/

    - name: Commit changes
      run: |
        git config --local user.email "${{ env.GIT_USER_EMAIL }}"
        git config --local user.name "${{ env.GIT_USER_NAME }}"
        git add context/context.json
        git diff --staged --quiet || git commit -m "Update context.json file"

    - name: Pull latest changes
      if: github.event_name == 'push'
      run: git pull origin master --rebase

    - name: Push changes
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: git push origin HEAD:master

    - name: Process versions and tags
      run: |
        git fetch --tags
        git tag | while read TAG; do
          sudo mkdir -p "docs/_build/html/versions/$TAG"

          # Process all TTL files dynamically
          while read file; do
            output_name=$(basename "$file" .ttl)-foops.ttl
            python docs/scripts/apply_foops_recommendations.py "$file" "$output_name"
            sudo cp "$output_name" "docs/_build/html/versions/$TAG/$(basename "$file")"
          done < ttl_files_list.txt

          # Ensure inferred file is included
          if [ -s inferred_ttl_list.txt ]; then
            while read inferred_file; do
              sudo cp "$inferred_file" "docs/_build/html/versions/$TAG/"
            done < inferred_ttl_list.txt
          fi

          # Copy context file if it exists
          if [ -d "context" ]; then
            sudo mkdir -p "docs/_build/html/versions/$TAG/context"
            sudo cp "context/context.json" "docs/_build/html/versions/$TAG/context"
          fi
        done

    - name: Copy TTL files to HTML directory
      run: |
        while read file; do
          output_name=$(basename "$file" .ttl)-foops.ttl
          python docs/scripts/apply_foops_recommendations.py "$file" "$output_name"
          sudo cp "$output_name" "docs/_build/html/$(basename "$file")"
        done < ttl_files_list.txt

        # Ensure inferred file is copied
        if [ -s inferred_ttl_list.txt ]; then
          while read inferred_file; do
            sudo cp "$inferred_file" "docs/_build/html/"
          done < inferred_ttl_list.txt
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentationHTML
        path: docs/_build/html/
        
    - name: Deploy
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html
